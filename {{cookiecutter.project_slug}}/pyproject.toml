{%- set LICENSE_CLASSIFIERS = {
    "GNU Affero General Public License v3.0":"License :: OSI Approved :: GNU Affero General Public License v3",
    "Apache License 2.0":"License :: OSI Approved :: Apache Software License",
    "BSD 2-Clause \"Simplified\" License":"License :: OSI Approved :: BSD License",
    "BSD 3-Clause \"New\" or \"Revised\" License":"License :: OSI Approved :: BSD License",
    "Creative Commons Zero v1.0 Universal":"License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "GNU General Public License v2.0":"License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "GNU General Public License v3.0":"License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "GNU Lesser General Public License v2.1":"License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
    "MIT License":"License :: OSI Approved :: MIT License",
    "Mozilla Public License 2.0":"License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
} %}

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_slug }}"
authors = [
    { name="{{cookiecutter.author}}", email="{{cookiecutter.email}}"},
]
description="{{cookiecutter.project_short_description}}"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
        'Development Status :: 2 - Pre-Alpha',
        'Intended Audience :: Developers',
{%- if cookiecutter.license in LICENSE_CLASSIFIERS %}
        '{{ LICENSE_CLASSIFIERS[cookiecutter.license] }}',
{%- endif %}
        'Natural Language :: English',
        'Programming Language :: Python :: Implementation :: CPython',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
]
keywords=['{{ cookiecutter.project_slug }}']
dependencies=["click"]
# Dynamic for setuptools
dynamic = ["version"]

[project.license]
file = "LICENSE"

[project.urls]
homepage = "{{cookiecutter.github_repo_url}}"
documentation = "https://{{ cookiecutter.project_slug | replace('_', '-') }}.readthedocs.io/en/latest/?version=latest"
repository = "{{cookiecutter.github_repo_url}}"
changelog = "{{cookiecutter.github_repo_url}}/blob/main/CHANGELOG.md"
"Bug Tracker" = "{{cookiecutter.github_repo_url}}/issues"

[project.optional-dependencies]
dev = [
    "{{ cookiecutter.project_slug }}",
    # Pytest
    "pytest>=6.1.1",
    "pytest-cov>=2.10.1",
    "pytest-mock>=3.6.1",
    "coverage>=5.3",

    # Documentation
    "sphinx>=4.5.0",
    "myst",
    "myst-parser",
    "sphinx_book_theme>=0.3.0",

    # Tox
    "tox",

    # Pre-commit
    "pre-commit",

    # Formatting
    "black",
    "flake8",

    # Typing
    "mypy"


]

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cli.cli:main"

[tool.setuptools]
zip-safe=false

[tool.setuptools.packages.find]
include = ["{{cookiecutter.project_slug}}", "{{cookiecutter.project_slug}}.*"]

[tool.mypy]
explicit_package_bases = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = ['build/','venv',"{{cookiecutter.project_slug}}/tests", "tests"]

[tool.docformatter]
recursive = true
blank = true
syntax = "numpy"
